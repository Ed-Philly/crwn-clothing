{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  yield console.log('I am fired');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n    dispatch(fetchCollectionSuccess(collectionMap));\n  }).catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionsSnapShotToMap","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionAsync","console","log","collectionRef","collection","get","then","snapshot","collectionMap","dispatch","catch","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AAGA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAEA,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AAEAD,EAAAA,aAAa,CACRE,GADL,GAEKC,IAFL,CAEUC,QAAQ,IAAI;AACd,UAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAE,IAAAA,QAAQ,CAACX,sBAAsB,CAACU,aAAD,CAAvB,CAAR;AAEH,GANL,EAOKE,KAPL,CAOWC,KAAK,IAAIF,QAAQ,CAACV,sBAAsB,CAACY,KAAK,CAACC,OAAP,CAAvB,CAP5B;AAQH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMnB,SAAS,CACXC,eAAe,CAACmB,uBADL,EAEXd,oBAFW,CAAf;AAGH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions'\n\n\nexport function* fetchCollectionAsync() {\n    yield console.log('I am fired');\n\n    const collectionRef = firestore.collection('collections');\n\n    collectionRef\n        .get()\n        .then(snapshot => {\n            const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n            dispatch(fetchCollectionSuccess(collectionMap));\n\n        })\n        .catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\n\nexport function* fetchCollectionStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionAsync);\n}\n"]},"metadata":{},"sourceType":"module"}