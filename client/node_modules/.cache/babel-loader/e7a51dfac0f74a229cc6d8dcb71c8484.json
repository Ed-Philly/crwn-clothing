{"ast":null,"code":"var _jsxFileName = \"/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/pages/shop/shop.component.js\";\nimport React from 'react';\nimport './shop.style.css';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionViews from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { selectCollectionForPreview } from '../../redux/shop/shop.selectors';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionViewsWithSpinner = WithSpinner(CollectionViews);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const {\n      updateCollections\n    } = this.props; //FETCH PATTERN REST API CALL: return value of collection is very nested\n    //fetch('https://firestore.googleapis.com/v1/projects/crwn-db-775e5/databases/(default)/documents/collections')\n    // .then(response => response.json())\n    // .then(collections => console.log(collections))\n    //PROMISE PATTERN\n\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    }, error => console.log('data not loaded', error)); //FIREBASE OBSERVER \n    //this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n    //    const collectionMap = convertCollectionsSnapShotToMap(snapshot)\n    //    updateCollections(collectionMap);\n    //    this.setState({ loading: false });\n    //});\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionViewsWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n/**const mapStateToProps = ({ collections }) => ({\n\n    collections: collections\n})*/\n\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Route","firestore","convertCollectionsSnapShotToMap","createStructuredSelector","CollectionViews","CollectionPage","selectCollectionForPreview","connect","updateCollections","WithSpinner","CollectionViewsWithSpinner","CollectionPageWithSpinner","ShopPage","Component","unsubscribeFromSnapshot","state","loading","componentDidMount","collectionRef","collection","props","get","then","snapshot","collectionMap","setState","error","console","log","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAOC,eAAP,MAA4B,oEAA5B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,0BAA0B,GAAGD,WAAW,CAACL,eAAD,CAA9C;AACA,MAAMO,yBAAyB,GAAGF,WAAW,CAACJ,cAAD,CAA7C;;AAEA,MAAMO,QAAN,SAAuBb,KAAK,CAACc,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,uBADmC,GACT,IADS;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,OAAO,EAAE;AADL,KAF2B;AAAA;;AAMnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGjB,SAAS,CAACkB,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAM;AAAEX,MAAAA;AAAF,QAAwB,KAAKY,KAAnC,CAFgB,CAIhB;AACA;AACA;AACA;AAIA;;AACAF,IAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,aAAa,GAAGtB,+BAA+B,CAACqB,QAAD,CAArD;AACAf,MAAAA,iBAAiB,CAACgB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD,EAIGU,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,KAA/B,CAJZ,EAZgB,CAkBhB;AACA;AACA;AACA;AACA;AACA;AAEH;;AACDG,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKV,KAAvB;AACA,UAAM;AAAEJ,MAAAA;AAAF,QAAc,KAAKD,KAAzB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACC,IAAK,EAAjC;AACI,MAAA,MAAM,EAAGX,KAAD,iBACJ,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEJ;AAAvC,SAAoDI,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEU,KAAK,CAACC,IAAK,gBAAjC;AACI,MAAA,MAAM,EAAGX,KAAD,iBACJ,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEJ;AAAtC,SAAmDI,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAUH;;AA9CkC;;AAgDvC,MAAMY,kBAAkB,GAAGC,QAAQ,KAAK;AACpCzB,EAAAA,iBAAiB,EAAE0B,cAAc,IAAID,QAAQ,CAACzB,iBAAiB,CAAC0B,cAAD,CAAlB;AADT,CAAL,CAAnC;AAIA;;;;;;AAKA,eAAe3B,OAAO,CAAC,IAAD,EAAOyB,kBAAP,CAAP,CAAkCpB,QAAlC,CAAf","sourcesContent":["import React from 'react'\nimport './shop.style.css'\nimport { Route } from 'react-router-dom'\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils'\nimport { createStructuredSelector } from 'reselect';\nimport CollectionViews from '../../components/collection-overview/collection-overview.component'\nimport CollectionPage from '../collection/collection.component'\nimport { selectCollectionForPreview } from '../../redux/shop/shop.selectors'\n\nimport { connect } from 'react-redux'\nimport { updateCollections } from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nconst CollectionViewsWithSpinner = WithSpinner(CollectionViews);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n    unsubscribeFromSnapshot = null;\n    state = {\n        loading: true\n    };\n\n    componentDidMount() {\n        const collectionRef = firestore.collection('collections');\n        const { updateCollections } = this.props\n\n        //FETCH PATTERN REST API CALL: return value of collection is very nested\n        //fetch('https://firestore.googleapis.com/v1/projects/crwn-db-775e5/databases/(default)/documents/collections')\n        // .then(response => response.json())\n        // .then(collections => console.log(collections))\n\n\n\n        //PROMISE PATTERN\n        collectionRef.get().then(snapshot => {\n            const collectionMap = convertCollectionsSnapShotToMap(snapshot)\n            updateCollections(collectionMap);\n            this.setState({ loading: false });\n        }, error => console.log('data not loaded', error));\n\n        //FIREBASE OBSERVER \n        //this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n        //    const collectionMap = convertCollectionsSnapShotToMap(snapshot)\n        //    updateCollections(collectionMap);\n        //    this.setState({ loading: false });\n        //});\n\n    }\n    render() {\n\n        const { match } = this.props\n        const { loading } = this.state;\n        return (\n            <div className='collection-page'>\n                <Route exact path={`${match.path}`}\n                    render={(props) =>\n                        <CollectionViewsWithSpinner isLoading={loading} {...props} />} />\n                <Route exact path={`${match.path}/:collectionId`}\n                    render={(props) =>\n                        <CollectionPageWithSpinner isLoading={loading} {...props} />} />\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\n/**const mapStateToProps = ({ collections }) => ({\n\n    collections: collections\n})*/\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}