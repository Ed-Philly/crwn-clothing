{"ast":null,"code":"var _jsxFileName = \"/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/pages/shop/shop.component.js\";\nimport React from 'react';\nimport './shop.style.css';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport CollectionViews from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const {\n      updateCollections\n    } = this.props;\n    collectionRef.onSnapshot(snapshot => {\n      const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n      updateCollections(collectionMap);\n    });\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      isLoading,\n      collections\n    } = this.props;\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: WithSpinner(CollectionViews)(isLoading, collections),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      component: WithSpinner(CollectionPage)(isLoading, collections),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nconst mapStateToProps = ({\n  isLoading,\n  shop: {\n    collections\n  }\n}) => ({\n  isLoading: isLoading,\n  collections: collections\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Route","firestore","convertCollectionsSnapShotToMap","CollectionViews","CollectionPage","connect","updateCollections","WithSpinner","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","props","onSnapshot","snapshot","collectionMap","componentWillUnmount","render","isLoading","collections","match","path","mapDispatchToProps","dispatch","collectionsMap","mapStateToProps","shop"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,eAAP,MAA4B,oEAA5B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,uBADmC,GACT,IADS;AAAA;;AAGnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGX,SAAS,CAACY,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAwB,KAAKQ,KAAnC;AAEAF,IAAAA,aAAa,CAACG,UAAd,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,aAAa,GAAGf,+BAA+B,CAACc,QAAD,CAArD;AACAV,MAAAA,iBAAiB,CAACW,aAAD,CAAjB;AACH,KAHD;AAKH;;AAEDC,EAAAA,oBAAoB,GAAG,CAAG;;AAE1BC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA6B,KAAKP,KAAxC;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEhB,WAAW,CAACJ,eAAD,CAAX,CAA6BiB,SAA7B,EAAwCC,WAAxC,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEC,KAAK,CAACC,IAAK,gBAAjC;AAAkD,MAAA,SAAS,EAAEhB,WAAW,CAACH,cAAD,CAAX,CAA4BgB,SAA5B,EAAuCC,WAAvC,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAzBkC;;AA2BvC,MAAMG,kBAAkB,GAAGC,QAAQ,KAAK;AACpCnB,EAAAA,iBAAiB,EAAEoB,cAAc,IAAID,QAAQ,CAACnB,iBAAiB,CAACoB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,MAAMC,eAAe,GAAG,CAAC;AAAEP,EAAAA,SAAF;AAAaQ,EAAAA,IAAI,EAAE;AAAEP,IAAAA;AAAF;AAAnB,CAAD,MAA2C;AAC/DD,EAAAA,SAAS,EAAEA,SADoD;AAE/DC,EAAAA,WAAW,EAAEA;AAFkD,CAA3C,CAAxB;;AAKA,eAAehB,OAAO,CAAC,IAAD,EAAOmB,kBAAP,CAAP,CAAkChB,QAAlC,CAAf","sourcesContent":["import React from 'react'\nimport './shop.style.css'\nimport { Route } from 'react-router-dom'\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils'\n\nimport CollectionViews from '../../components/collection-overview/collection-overview.component'\nimport CollectionPage from '../collection/collection.component'\n\nimport { connect } from 'react-redux'\nimport { updateCollections } from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nclass ShopPage extends React.Component {\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const collectionRef = firestore.collection('collections');\n        const { updateCollections } = this.props\n\n        collectionRef.onSnapshot(snapshot => {\n            const collectionMap = convertCollectionsSnapShotToMap(snapshot)\n            updateCollections(collectionMap);\n        });\n\n    }\n\n    componentWillUnmount() { }\n\n    render() {\n        const { isLoading, collections } = this.props\n        const { match } = this.props\n        return (\n            <div className='collection-page'>\n                <Route exact path={`${match.path}`} component={WithSpinner(CollectionViews)(isLoading, collections)} />\n                <Route exact path={`${match.path}/:collectionId`} component={WithSpinner(CollectionPage)(isLoading, collections)} />\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nconst mapStateToProps = ({ isLoading, shop: { collections } }) => ({\n    isLoading: isLoading,\n    collections: collections\n})\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}