{"ast":null,"code":"var _jsxFileName = \"/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/pages/shop/shop.component.js\";\nimport React from 'react';\nimport './shop.style.css';\nimport { Route } from 'react-router-dom';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport CollectionViews from '../../components/collection-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionViewsWithSpinner = WithSpinner(CollectionViews);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    const {\n      updateCollections\n    } = this.props;\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(snapshot => {\n      const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n      updateCollections(collectionMap);\n    });\n  }\n\n  componentWillUnmount() {}\n\n  render() {\n    const {\n      match,\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"collection-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionViewsWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isLoading\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nconst mapStateToProps = ({\n  isLoading,\n  shop: {\n    collections\n  }\n}) => ({\n  isLoading: isLoading,\n  collections: collections\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/pages/shop/shop.component.js"],"names":["React","Route","firestore","convertCollectionsSnapShotToMap","CollectionViews","CollectionPage","connect","updateCollections","WithSpinner","CollectionViewsWithSpinner","CollectionPageWithSpinner","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","props","onSnapshot","snapshot","collectionMap","componentWillUnmount","render","match","isLoading","path","mapDispatchToProps","dispatch","collectionsMap","mapStateToProps","shop","collections"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,eAAP,MAA4B,oEAA5B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,0BAA0B,GAAGD,WAAW,CAACJ,eAAD,CAA9C;AACA,MAAMM,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;;AAEA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,uBADmC,GACT,IADS;AAAA;;AAGnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AAEA,SAAKJ,uBAAL,GAA+BE,aAAa,CAACG,UAAd,CAAyBC,QAAQ,IAAI;AAChE,YAAMC,aAAa,GAAGjB,+BAA+B,CAACgB,QAAD,CAArD;AACAZ,MAAAA,iBAAiB,CAACa,aAAD,CAAjB;AACH,KAH8B,CAA/B;AAKH;;AAEDC,EAAAA,oBAAoB,GAAG,CAAG;;AAE1BC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAuB,KAAKP,KAAlC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACE,IAAK,EAAjC;AACI,MAAA,MAAM,EAAGR,KAAD,iBACJ,oBAAC,0BAAD;AAA4B,QAAA,SAAS,EAAEO;AAAvC,SAAsDP,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAII,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEM,KAAK,CAACE,IAAK,gBAAjC;AACI,MAAA,MAAM,EAAGR,KAAD,iBACJ,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEO;AAAtC,SAAqDP,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAUH;;AA7BkC;;AA+BvC,MAAMS,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,iBAAiB,EAAEqB,cAAc,IAAID,QAAQ,CAACpB,iBAAiB,CAACqB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,MAAMC,eAAe,GAAG,CAAC;AAAEL,EAAAA,SAAF;AAAaM,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAnB,CAAD,MAA2C;AAC/DP,EAAAA,SAAS,EAAEA,SADoD;AAE/DO,EAAAA,WAAW,EAAEA;AAFkD,CAA3C,CAAxB;;AAKA,eAAezB,OAAO,CAACuB,eAAD,EAAkBH,kBAAlB,CAAP,CAA6Cf,QAA7C,CAAf","sourcesContent":["import React from 'react'\nimport './shop.style.css'\nimport { Route } from 'react-router-dom'\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils'\n\nimport CollectionViews from '../../components/collection-overview/collection-overview.component'\nimport CollectionPage from '../collection/collection.component'\n\nimport { connect } from 'react-redux'\nimport { updateCollections } from '../../redux/shop/shop.actions'\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\n\nconst CollectionViewsWithSpinner = WithSpinner(CollectionViews);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\n\nclass ShopPage extends React.Component {\n    unsubscribeFromSnapshot = null;\n\n    componentDidMount() {\n        const collectionRef = firestore.collection('collections');\n        const { updateCollections } = this.props\n\n        this.unsubscribeFromSnapshot = collectionRef.onSnapshot(snapshot => {\n            const collectionMap = convertCollectionsSnapShotToMap(snapshot)\n            updateCollections(collectionMap);\n        });\n\n    }\n\n    componentWillUnmount() { }\n\n    render() {\n\n        const { match, isLoading } = this.props\n        return (\n            <div className='collection-page'>\n                <Route exact path={`${match.path}`}\n                    render={(props) =>\n                        <CollectionViewsWithSpinner isLoading={isLoading} {...props} />} />\n                <Route exact path={`${match.path}/:collectionId`}\n                    render={(props) =>\n                        <CollectionPageWithSpinner isLoading={isLoading} {...props} />} />\n            </div>\n        )\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\n\nconst mapStateToProps = ({ isLoading, shop: { collections } }) => ({\n    isLoading: isLoading,\n    collections: collections\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}