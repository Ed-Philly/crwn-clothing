{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  yield console.log('I am fired');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionsSnapShotToMap, snapshot);\n    yield put(fetchCollectionSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionFailure(error.message));\n  } // collectionRef\n  //     .get()\n  //     .then(snapshot => {\n  //         const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n  //         dispatch(fetchCollectionSuccess(collectionMap));\n  //     })\n  //     .catch(error => dispatch(fetchCollectionFailure(error.message)));\n\n}\nexport function* fetchCollectionStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","put","ShopActionTypes","firestore","convertCollectionsSnapShotToMap","fetchCollectionSuccess","fetchCollectionFailure","fetchCollectionAsync","console","log","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,QAA+D,gBAA/D;AAGA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AAEA,MAAI;AACA,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMd,IAAI,CAACI,+BAAD,EAAkCQ,QAAlC,CAAhC;AACA,UAAMX,GAAG,CAACI,sBAAsB,CAACS,aAAD,CAAvB,CAAT;AAEH,GAND,CAME,OAAOC,KAAP,EAAc;AACZ,UAAMd,GAAG,CAACK,sBAAsB,CAACS,KAAK,CAACC,OAAP,CAAvB,CAAT;AACH,GAXmC,CAepC;AACA;AACA;AACA;AACA;AAEA;AACA;;AACH;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMlB,SAAS,CACXG,eAAe,CAACgB,uBADL,EAEXX,oBAFW,CAAf;AAGH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { ShopActionTypes } from './shop.types';\nimport { firestore, convertCollectionsSnapShotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionSuccess, fetchCollectionFailure } from './shop.actions'\n\n\nexport function* fetchCollectionAsync() {\n    yield console.log('I am fired');\n\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get()\n        const collectionMap = yield call(convertCollectionsSnapShotToMap, snapshot)\n        yield put(fetchCollectionSuccess(collectionMap));\n\n    } catch (error) {\n        yield put(fetchCollectionFailure(error.message))\n    }\n\n\n\n    // collectionRef\n    //     .get()\n    //     .then(snapshot => {\n    //         const collectionMap = convertCollectionsSnapShotToMap(snapshot);\n    //         dispatch(fetchCollectionSuccess(collectionMap));\n\n    //     })\n    //     .catch(error => dispatch(fetchCollectionFailure(error.message)));\n}\n\nexport function* fetchCollectionStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionAsync);\n}\n"]},"metadata":{},"sourceType":"module"}