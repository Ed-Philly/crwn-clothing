{"ast":null,"code":"var _jsxFileName = \"/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from '../../components/form-input/form-input.componet';\nimport './sign-in.style.scss';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\nimport { connect } from 'react-redux';\n\nclass SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const {\n        emailSignInStart\n      } = this.props;\n      emailSignInStart({\n        email,\n        password\n      });\n      this.setState({\n        email: '',\n        password: ''\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"text\",\n      value: this.state.email,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      required: true,\n      handleChange: this.handleChange,\n      label: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: googleSignInStart,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }, ' ', \"Sign in with Google \", ' '))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => emailSignInStart({\n    email,\n    password\n  })\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/eglekniukstaite/Desktop/EDDY/ReactProjects/Course/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","Component","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","constructor","props","handleSubmit","event","preventDefault","email","password","state","setState","handleChange","e","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iDAAtB;AACA,OAAO,sBAAP;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,8BAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC3BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,YARmB,GAQHC,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAsB,KAAKC,KAAjC;AACA,YAAM;AAAEV,QAAAA;AAAF,UAAuB,KAAKI,KAAlC;AAEAJ,MAAAA,gBAAgB,CAAC;AAAEQ,QAAAA,KAAF;AAASC,QAAAA;AAAT,OAAD,CAAhB;AACA,WAAKE,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAd;AAEH,KAhBkB;;AAAA,SAkBnBG,YAlBmB,GAkBHC,CAAD,IAAO;AAClB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAkBF,CAAC,CAACG,MAA1B;AACA,WAAKL,QAAL,CAAc;AAAE,SAACI,IAAD,GAAQD;AAAV,OAAd;AACH,KArBkB;;AAGf,SAAKJ,KAAL,GAAa;AACTF,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAiBDQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAAElB,MAAAA;AAAF,QAAwB,KAAKK,KAAnC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAFJ,eAII;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,OADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,KAAK,EAAE,KAAKK,KAAL,CAAWF,KAHtB;AAG6B,MAAA,QAAQ,MAHrC;AAII,MAAA,YAAY,EAAE,KAAKI,YAJvB;AAKI,MAAA,KAAK,EAAC,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAQI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAC,UADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWD,QAHtB;AAGgC,MAAA,QAAQ,MAHxC;AAII,MAAA,YAAY,EAAE,KAAKG,YAJvB;AAKI,MAAA,KAAK,EAAC,UALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,eAeI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,eAEI,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAEb,iBAArC;AAAwD,MAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,GADL,0BAEK,GAFL,CAFJ,CAfJ,CAJJ,CADJ;AA8BH;;AAzD0B;;AA2D/B,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCpB,EAAAA,iBAAiB,EAAE,MAAMoB,QAAQ,CAACpB,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACQ,KAAD,EAAQC,QAAR,KAAsBT,gBAAgB,CAAC;AAAEQ,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD;AAFpB,CAAL,CAAnC;;AAIA,eAAeR,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport FormInput from '../../components/form-input/form-input.componet';\nimport './sign-in.style.scss';\nimport CustomButton from '../../components/custom-button/custom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action'\nimport { connect } from 'react-redux'\n\nclass SignIn extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n    }\n    handleSubmit = (event) => {\n        event.preventDefault()\n        const { email, password } = this.state;\n        const { emailSignInStart } = this.props\n\n        emailSignInStart({ email, password });\n        this.setState({ email: '', password: '' });\n\n    }\n\n    handleChange = (e) => {\n        const { value, name } = e.target;\n        this.setState({ [name]: value })\n    }\n\n\n    render() {\n        const { googleSignInStart } = this.props\n        return (\n            <div className=\"sign-in\">\n                <h2>I already have an account</h2>\n                <span>Sign in with your email and password</span>\n\n                <form onSubmit={this.handleSubmit}>\n                    <FormInput\n                        name=\"email\"\n                        type=\"text\"\n                        value={this.state.email} required\n                        handleChange={this.handleChange}\n                        label=\"email\" />\n\n                    <FormInput\n                        name=\"password\"\n                        type=\"password\"\n                        value={this.state.password} required\n                        handleChange={this.handleChange}\n                        label=\"password\" />\n\n                    <div className=\"buttons\">\n                        <CustomButton type=\"submit\">Sign in</CustomButton>\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>\n                            {' '}\n        Sign in with Google {' '}</CustomButton>\n\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => (emailSignInStart({ email, password }))\n})\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}